---
- name: configure a vagrant base box
  hosts: vagrant-box
  become: yes

  vars:
    dhcp:     yes
    user:     "{{ lookup('env', 'ANSIBLE_PERSONAL_USER') }}"
    password: "{{ lookup('env', 'ANSIBLE_PERSONAL_PASSWORD') }}"
    key_file: "{{ lookup('env', 'ANSIBLE_PERSONAL_PUBKEYFILE') }}"

  tasks:
    - name: install some base packages
      apt:
        name: "{{ item }}"
        update_cache: yes
      with_items:
        - git
        - sudo
        - curl

    - name: "create {{ user }} group in box"
      group:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ user }}"
        - administrator

    - name: "create {{ user }} user in box"
      user:
        name: "{{ user }}"
        password: "{{ password }}"
        comment: "{{ user }} only user, accessible through ssh with personal key"
        group: "{{ user }}"
        groups: adm,sudo
        append: yes

    - name: "set authorized key took from {{ user }}"
      authorized_key:
        user: "{{ user }}"
        state: present
        key: "{{ lookup('file', key_file) }}"

    - name: allow 'administrator' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%administrator'
        line: '%administrator ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: "add {{ user }} to administrator group"
      user:
        state: present
        name: "{{ user }}"
        groups: administrator
        append: yes

    - name: "allow {{ user }} user to have passwordless sudo"
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^{{ user }}'
        line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: template out interfaces file
      copy:
        content: |
          auto lo
          iface lo inet loopback

          {% if dhcp %}
          auto eth0
          iface eth0 inet dhcp
          {% else %}
          iface eth0 inet manual
          {% endif %}
        dest: /etc/network/interfaces
        backup: yes

    - name: checkout dotfiles repository from my personal github account
      git:
        repo: "https://github.com/{{ user }}/dotfiles.git"
        dest: "{{ lookup('env', 'HOME') }}/dotfiles"

    - name: execute setup.sh from dotfiles repository
      command: "bash {{ lookup('env', 'HOME') }}/dotfiles/setup.sh"
      environment:
        DOTFILES_DIR: "{{ lookup('env', 'HOME') }}/dotfiles"
        DOTFILES_ENV: laptop

    - name: install goss to server (part 1)
      get_url:
        url: https://goss.rocks/install
        dest: /tmp/goss_install.sh

    - name: install goss to server (part 2)
      command: bash /tmp/goss_install.sh

  # roles:
  #   - role: docker
  #     tags: docker
